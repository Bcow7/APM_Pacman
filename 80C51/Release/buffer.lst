                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.0 #6037 (Oct 31 2010) (MINGW32)
                              4 ; This file was generated Fri Jan 22 14:39:00 2016
                              5 ;--------------------------------------------------------
                              6 	.module buffer
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _BUFFER_clear
                             13 	.globl _BUFFER_out
                             14 	.globl _BUFFER_in
                             15 	.globl _buffer
                             16 	.globl _out
                             17 	.globl _in
                             18 ;--------------------------------------------------------
                             19 ; special function registers
                             20 ;--------------------------------------------------------
                             21 	.area RSEG    (ABS,DATA)
   0000                      22 	.org 0x0000
                             23 ;--------------------------------------------------------
                             24 ; special function bits
                             25 ;--------------------------------------------------------
                             26 	.area RSEG    (ABS,DATA)
   0000                      27 	.org 0x0000
                             28 ;--------------------------------------------------------
                             29 ; overlayable register banks
                             30 ;--------------------------------------------------------
                             31 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      32 	.ds 8
                             33 ;--------------------------------------------------------
                             34 ; internal ram data
                             35 ;--------------------------------------------------------
                             36 	.area DSEG    (DATA)
   0000                      37 _in::
   0000                      38 	.ds 1
   0001                      39 _out::
   0001                      40 	.ds 1
                             41 ;--------------------------------------------------------
                             42 ; overlayable items in internal ram 
                             43 ;--------------------------------------------------------
                             44 	.area	OSEG    (OVR,DATA)
                             45 	.area	OSEG    (OVR,DATA)
                             46 ;--------------------------------------------------------
                             47 ; indirectly addressable internal ram data
                             48 ;--------------------------------------------------------
                             49 	.area ISEG    (DATA)
                             50 ;--------------------------------------------------------
                             51 ; absolute internal ram data
                             52 ;--------------------------------------------------------
                             53 	.area IABS    (ABS,DATA)
                             54 	.area IABS    (ABS,DATA)
                             55 ;--------------------------------------------------------
                             56 ; bit data
                             57 ;--------------------------------------------------------
                             58 	.area BSEG    (BIT)
                             59 ;--------------------------------------------------------
                             60 ; paged external ram data
                             61 ;--------------------------------------------------------
                             62 	.area PSEG    (PAG,XDATA)
                             63 ;--------------------------------------------------------
                             64 ; external ram data
                             65 ;--------------------------------------------------------
                             66 	.area XSEG    (XDATA)
   0000                      67 _buffer::
   0000                      68 	.ds 250
                             69 ;--------------------------------------------------------
                             70 ; absolute external ram data
                             71 ;--------------------------------------------------------
                             72 	.area XABS    (ABS,XDATA)
                             73 ;--------------------------------------------------------
                             74 ; external initialized ram data
                             75 ;--------------------------------------------------------
                             76 	.area XISEG   (XDATA)
                             77 	.area HOME    (CODE)
                             78 	.area GSINIT0 (CODE)
                             79 	.area GSINIT1 (CODE)
                             80 	.area GSINIT2 (CODE)
                             81 	.area GSINIT3 (CODE)
                             82 	.area GSINIT4 (CODE)
                             83 	.area GSINIT5 (CODE)
                             84 	.area GSINIT  (CODE)
                             85 	.area GSFINAL (CODE)
                             86 	.area CSEG    (CODE)
                             87 ;--------------------------------------------------------
                             88 ; global & static initialisations
                             89 ;--------------------------------------------------------
                             90 	.area HOME    (CODE)
                             91 	.area GSINIT  (CODE)
                             92 	.area GSFINAL (CODE)
                             93 	.area GSINIT  (CODE)
                             94 ;	../buffer.c:12: unsigned char in = 0;
   0000 75*00 00             95 	mov	_in,#0x00
                             96 ;	../buffer.c:15: unsigned char out = 0;
   0003 75*01 00             97 	mov	_out,#0x00
                             98 ;--------------------------------------------------------
                             99 ; Home
                            100 ;--------------------------------------------------------
                            101 	.area HOME    (CODE)
                            102 	.area HOME    (CODE)
                            103 ;--------------------------------------------------------
                            104 ; code
                            105 ;--------------------------------------------------------
                            106 	.area CSEG    (CODE)
                            107 ;------------------------------------------------------------
                            108 ;Allocation info for local variables in function 'BUFFER_in'
                            109 ;------------------------------------------------------------
                            110 ;c                         Allocated to registers r2 
                            111 ;------------------------------------------------------------
                            112 ;	../buffer.c:21: void BUFFER_in(char c) {
                            113 ;	-----------------------------------------
                            114 ;	 function BUFFER_in
                            115 ;	-----------------------------------------
   0000                     116 _BUFFER_in:
                    0002    117 	ar2 = 0x02
                    0003    118 	ar3 = 0x03
                    0004    119 	ar4 = 0x04
                    0005    120 	ar5 = 0x05
                    0006    121 	ar6 = 0x06
                    0007    122 	ar7 = 0x07
                    0000    123 	ar0 = 0x00
                    0001    124 	ar1 = 0x01
   0000 AA 82               125 	mov	r2,dpl
                            126 ;	../buffer.c:22: buffer[in++] = c;
   0002 AB*00               127 	mov	r3,_in
   0004 05*00               128 	inc	_in
   0006 EB                  129 	mov	a,r3
   0007 24r00               130 	add	a,#_buffer
   0009 F5 82               131 	mov	dpl,a
   000B E4                  132 	clr	a
   000C 34s00               133 	addc	a,#(_buffer >> 8)
   000E F5 83               134 	mov	dph,a
   0010 EA                  135 	mov	a,r2
   0011 F0                  136 	movx	@dptr,a
                            137 ;	../buffer.c:23: in %= BUFFER_SIZE;
   0012 75 F0 FA            138 	mov	b,#0xFA
   0015 E5*00               139 	mov	a,_in
   0017 84                  140 	div	ab
   0018 85 F0*00            141 	mov	_in,b
   001B 22                  142 	ret
                            143 ;------------------------------------------------------------
                            144 ;Allocation info for local variables in function 'BUFFER_out'
                            145 ;------------------------------------------------------------
                            146 ;c                         Allocated to registers r2 
                            147 ;------------------------------------------------------------
                            148 ;	../buffer.c:30: char BUFFER_out() {
                            149 ;	-----------------------------------------
                            150 ;	 function BUFFER_out
                            151 ;	-----------------------------------------
   001C                     152 _BUFFER_out:
                            153 ;	../buffer.c:31: char c = buffer[out++];
   001C AA*01               154 	mov	r2,_out
   001E 05*01               155 	inc	_out
   0020 EA                  156 	mov	a,r2
   0021 24r00               157 	add	a,#_buffer
   0023 F5 82               158 	mov	dpl,a
   0025 E4                  159 	clr	a
   0026 34s00               160 	addc	a,#(_buffer >> 8)
   0028 F5 83               161 	mov	dph,a
   002A E0                  162 	movx	a,@dptr
   002B FA                  163 	mov	r2,a
                            164 ;	../buffer.c:32: out %= BUFFER_SIZE;
   002C 75 F0 FA            165 	mov	b,#0xFA
   002F E5*01               166 	mov	a,_out
   0031 84                  167 	div	ab
   0032 85 F0*01            168 	mov	_out,b
                            169 ;	../buffer.c:33: return c;
   0035 8A 82               170 	mov	dpl,r2
   0037 22                  171 	ret
                            172 ;------------------------------------------------------------
                            173 ;Allocation info for local variables in function 'BUFFER_clear'
                            174 ;------------------------------------------------------------
                            175 ;------------------------------------------------------------
                            176 ;	../buffer.c:39: void BUFFER_clear() {
                            177 ;	-----------------------------------------
                            178 ;	 function BUFFER_clear
                            179 ;	-----------------------------------------
   0038                     180 _BUFFER_clear:
                            181 ;	../buffer.c:40: in = 0;
   0038 75*00 00            182 	mov	_in,#0x00
                            183 ;	../buffer.c:41: out = 0;
   003B 75*01 00            184 	mov	_out,#0x00
   003E 22                  185 	ret
                            186 	.area CSEG    (CODE)
                            187 	.area CONST   (CODE)
                            188 	.area XINIT   (CODE)
                            189 	.area CABS    (ABS,CODE)
